/*
    This is a trailhead for the communities

  https://trailhead.salesforce.com/content/learn
    /projects/communities_theme_layout
    /create_community_theme
*/
BUILD A CUSTOM THEME LAYOUR COMPONENT FOR LIGHTNING
  CREATE A COMMUNITY
    A custom theme layout componenet is the best way to construct the structure of a Lightning community template
      and override its defaults
    A theme layout component defines the top-level layout for the template pages 
    (1) in your Lightning community. It includes the common header and footer 
    (2), and often includes navigation, search, and the user profile menu.
    In contrast, the content layout (3) defines the content regions of your pages, such as a two-column layout.
      you can override a template's default structure by creating a custom Lightning componenet
      in Developer Console implementing ' forceCommunity:themeLayout ' interface
      to use custom Lightning components in your pages, u must assign component to a theme layout in Community Builder
        then apply the them layout in each page's properties

        //link below is pic showing template that includes a theme layout and it associated Lightning components
            https://res.cloudinary.com/hy4kyit2a/f_auto,fl_lossy,q_70
            /learn/projects/communities_theme_layout
            /create_community_theme/images
            /11ac8c441567189fceef8e6d78c31e84_community_builder_theme2.png

    Community Builder doesn't let you assign custom Lightning component directly to a page
     to instantly update structure of every page that a theme layout applies
     to simply by swapping Lightning component associated w/ theme layout
     //so that time isn't wasted updating every single page; allows quick refresh

  CREATE A CUSTOM THEME LAYOUT COMPONENT
    Define Theme Layout Component
     to appear in Community Builder in the Settings|Theme|Configure area, a theme layout component must implement
      forceCommunity:themeLayout inteface
    Add {!v.body} wherever you want the content, which changes from page to page, to appear within the theme layout component.
    Attributes declared as Aura.Component[] and included in your markup are rendered in the theme layout component as open regions, 
      which form the basic structure of your theme layout. Users can add drag-and-drop components to these regions in Community Builder.
    The code uses the SLDS grid system to add structure to the layout.

  ADD A DESIGN RESOURCE
    controls which component attr are exposed in Community Builder
    describes the design-time behavior of the Lightning component
      -infothat visual tools need to display the componenet in a page or app

  ADD A COMPANY LOGO
   Define a Tokens Bundle
   The tokens bundle extends forceCommunity:base, which gives access to all tokens exposed by SLDS 
    and the branding values defined in the Theme panel in Community Builder.
   
   Add a CSS Resource
    In Community Builder, each property in Theme panel maps to one or more standard design tokens. 
    by using tokens in CSS of component, easy to use the Theme panel to quickly update the component’s appearance.
    IN this case  we’re interested in the Company Logo property, which maps to the 'brandLogoImage' token.
    The code uses the brandLogoImage token (wrapped by a t()) 
      to inject the company logo in the CSS as the background image of the logoContainer.

  BUILD A VERTICAL NAV MENU
   Create and Test the Nav Component
    Extending forceCommunity:navigationMenuBase component gives new component automatic access 
     to all navigation menu items defined in the community’s Navigation Menu component. 
   Admins can define and update the items in the Navigation Menu in Community Builder.
   To show in action, the unordered list iterates through array of menuItems, 
    which is defined in the extended abstract component, 
    and outputs <li> for each entry in the array.

    This code takes advantage of aura expression syntax to do some nifty things. 
    You can conditionally add the slds-is-active class to the list item depending on whether the item is active. 
    You also set the data-menu-item-id to be the item’s unique ID, which you can use later to navigate to the corresponding item. 
    In this way, you need only one click listener for the entire list, instead of adding one for each list item.
    
    Code Highlight:
      Note the JavaScript syntax for accessing data attributes on HTML elements, which allows you to get that item’s ID.

    Add CSS to the Custom Theme Layout Component
      To get everything looking peachy, remove some unwanted margins from theme layout component 
        and set the main content width.
  BUILD A CUSTOM SEARCH COMPONENT
   Define a Custom Search Component 
     The customcode class uses a <lightning:ButtonIcon> component & includes a click handler
     It also includes an attribute called searchText to contain the search text and 
       uses a <ui:inputText> component (instead of <input>) to bind the values.

   Create an Apex Controller
    The searchForIds method takes a String searchText and returns a list of strings representing found IDs. 
    For now, we just return the search string itself.
    This code reads the value of the input text, sends it to the server-side Apex controller, and waits for a response. 
    If you test the example, you see an array logged to the browser console.
   
   Implement a Search Query w/ SOSL
     use SOSL in Apex class to create query that finds objects whose fields contain the input search text.

   Return the Search Results to a Custom Page
    this is how to take record IDs & redirect to new page containing record names & links to full record details. 
    To do this, you need:
     A Lightning component that displays a single record with a link to the record details
     A drag-and-drop component for Community Builder that lists the records
     A custom Community Builder page that uses the drag-and-drop component to show the returned records

   Create a Drag-and-Drop Component That Lists the Records
    Create a drag-and-drop component that appears in the Components panel in Community Builder. 
    When added to the custom page, it displays the list of returned records for the search term.
     Code Highlights:

     To appear in the Components panel in Community Builder, 
      a component must implement the forceCommunity:availableForAllPageTypes interface. 
     If you select the Lightning Communities Page checkbox when creating a new component, 
      the interface is automatically added to the default code.
     Mark your resources, such as a component, with access="global" to make the resource usable outside of your own org. 
     For example, if you want a component to be usable in an installed package or 
      by a Lightning App Builder user or a Community Builder user in another org.

  ADD CONFIGURATION PROPERTIES TO THE THEME LAYOUT
   you add a property to the theme layout component, 
    which lets you hide the search component completely in Community Builder.

----------------------------------------------------------------------
EXPAND REACH W/ COMMUNITIES
  COMMUNITY ROLLOUT STRATEGY
   PLAN COMMUNITY ROLLOUT
    Think of as four step cyclical process:
     establish, manage, engage, and measure
     The first two phases involve
      creating a community mission statement
      developing member journeys
      planning executive engagement
     In the management phase, focus on promoting the communtiy
      & having an awareness plan at every state of growth. activities in this 
      phase include...
        Develop a promotion plan. Promotions commonly include videos, social media, emails, and website updates.
        Preparing resources for the community.
        Adhering to the crawl (launch), walk (engage), and run (build value) process.

   Community License(s)
    Do your users need need access to leads, opportunities, & campaigns
      Salesforce Partner Community License
      if not...
    Access needed to advanced sharing, reports & dashboards, or records across
     accts?
      Salesforce Customer Community Plus license
      if not again...
        Salesforce Customer Community License

      Nuances of Customer Community Licenses
       Members accessing Communities w/ Customer Community License have limited
        access because they do not have roles w/in Salesforce
       Therefore, these members can only see their own records
        cannot see anyone else's in the community

      Need to make use of a Sharing Set 
        sharing set gives community users access to records associated w/ their 
         accts or contacts based on their user profiles.
        Note.(important)
         The admin can set up only one sharing set per profile per object.
      Sharing Group allows sharing records owned by Customer Community License
       holders w/ internal and external users in your community.

      Creating Community User(s)
       Should "Enable Customer User" on the dropdown menu of contacts
        steps:
         From Setup, click Object Manager.
         Click Contact | Page Layouts | Contact Layout.
         In the page layout editor, click Mobile & Lightning Actions. 
         (may need to click wrench to override customizations in Lightning & Mobile Actions section.)
         Drag Enable Customer User button to Salesforce Mobile & Lightning Experience Actions section.
         Click Quick Save.

   Set up a Basic Community & Learn Additional Features
    Add Community Members
     steps:
      Setup | "All Communities" | select All Communities.
      Open Community Workspaces or Community Management. 
        To access need “Create and Set Up Communities” permission.
      Select Administration | Members.
      Search for Customer Community profile; add to community.

      Other features that can be enabled for Community
      Chatter:
        Chatter powers all the discussions in Customer Service and
         Salesforce Tabs + Visualforce. drives community engagement by giving
          users the ability to ask and answer questions, share files,
          and participate in discussions in their Chatter feed, in groups, and on records.
         Members in your users’ groups and communities can answer questions
          just as they would comment on a Chatter post.

      Salesforce Knowledge:
        Build knowledge base to give your community visitors, clients,
         partners, and service agents the ultimate in support.
        Salesforce Knowledge lets you create and manage articles to support
         customer base & minimize costly support calls.

      Ideas:
       Enable a group of users to post, vote for, and comment on ideas.
       Ideas provides an online, transparent way for you to attract, manage,
        and showcase innovation.

      Leads (Partner Users Only):
        Allows partners to have access to and create leads in your communities.

      Community Management Package:
        Use Community Management dashboards to view your community’s analytics,
         such as metrics and trends on activity. Dashboards give you mid-term to
         long-term views on adoption and engagement, providing you with a
         high-level view into the health of your community.

   Maximize Community Member Engagement
    crucial that every community manager defines what engagement means to
     their community and company.
    How to engage users & measure whether meeting our community goals?
    What kind of short and long-term goals are you aiming to see?

   Search in Salesforce Communities
    Search makes it easy for customers to get around the community
     no matter what page they're on
    w/ customizations, you can help them get there even faster

    Search Out-The-Box features
     Lemmatization
     Lemmatization helps users find different forms of a word.
      i.e
       when a customer searches for bean, search returns results for beans.
       Similarly, a search for grind also returns results for grinds and grinding

     Spelling Correction
      This feature returns results that match corrected spellings of the term.
      So it’s no big deal when a customer isn’t quite sure how to spell
      cappuccino, or just accidentally types fliter instead of filter

     Expanded Queries
      If a search term gets no results, this finds matches where search term 
       is part of a word. For example, if customer searches for mocha, search 
        also returns results for mochaccino. 
        It also looks for matches that have slightly different punctuation.

     AND/OR Searching
      When a customer searches for a Knowledge article using multiple search
       terms, we first run an AND search. For example, if a customer searches
       for French press, we first look for results that contain both French and
       press. If we don’t find many matches, we switch to an OR search.
       This returns results that contain either French or press,
        giving the customer more potential matches to choose from.

   Build a Communityw/ Knowledge & Chat
    Enable Live Agent & Communities
      Live Agent is Service Cloud feature that allows you to chat w/ customers
       directly from your website.
       steps:
        1. "Live Agent Settings" | select Live Agent Settings
        2. Select Enable Live Agent

      to access Live Agent, need permissions on user records
      steps:
       1. "Skills" | select Skills
       2. click New
       3. Define skill as you'd like  

      w/ chat buttons, community members can chat w/ agent
      steps:
       1. "Chat button" | select Chat Buttons & Invitations
       2. Click New
       3. select the type Chat Button
       4. Definte button as you'd like

    (FINISH WHAT'S BELOW)
    Create a Chat Snap-In
    Enable & Configure Lightning Knowledge
    Add Knowledge to the Community Using Topics
    Add Branding and Components to the Community
    Try Out Your New Community
